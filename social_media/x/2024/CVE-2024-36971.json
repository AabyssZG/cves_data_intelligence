[
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T04:13:18",
        "author_id": "702690547127857152",
        "data_id": "1820674483650220050",
        "reposts": 1,
        "post": "rt @landiantech: \u8c37\u6b4c\u53d1\u5e03 2024-08 #android \u4f8b\u884c\u5b89\u5168\u66f4\u65b0\uff0c\u5408\u8ba1\u4fee\u590d 48 \u4e2a\u5b89\u5168\u6f0f\u6d1e\uff0c\u5305\u62ec\u5df2\u7ecf\u906d\u5230\u9ed1\u5ba2\u5229\u7528\u7684\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e cve-2024-36971\n\n\u8be5\u6f0f\u6d1e\u4f4d\u4e8e linux kernel \u7f51\u7edc\u8def\u7531\u7ba1\u7406\u4e2d\uff0c\u501f\u52a9\u6f0f\u6d1e\u9ed1\u5ba2\u53ef\u4ee5\u65e0\u9700\u7528\u6237\u4ea4\u4e92\u53d1\u8d77\u2026",
        "audience": 124,
        "audience_total": 178220,
        "total_reposts": 19,
        "post_count": 1,
        "author": "\u5171\u532a\u662f\ud83d\udca9\ud83e\udd2e",
        "username": "faust2017li",
        "v_score": 0.648982,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T06:38:26",
        "author_id": "806510975516082178",
        "data_id": "1820711010644177136",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 757,
        "audience_total": 178503,
        "total_reposts": 19,
        "post_count": 2,
        "author": "global newsroom",
        "username": "observerlife07",
        "v_score": 0.648982,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T07:24:06",
        "author_id": "21512070",
        "data_id": "1820722500646355188",
        "reposts": 0,
        "post": "according to previous advisories from the linux community, cve-2024-36971 is a kernel vulnerability that can lead to a use-after-free condition.\u00a0\n#zeroday #android https://t.co/vuqzopj1d6",
        "audience": 1679,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "vojislav rodic",
        "username": "vojislav_rodic",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T06:38:41",
        "author_id": "1730713264399507456",
        "data_id": "1820711072648638668",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 124,
        "audience_total": 178530,
        "total_reposts": 20,
        "post_count": 2,
        "author": "recipe",
        "username": "recipe789131",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T07:28:00",
        "author_id": "1516039202869321732",
        "data_id": "1820723483455697277",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 54906,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "anonymous germany",
        "username": "anonymous00708",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T08:10:03",
        "author_id": "1364688209188450304",
        "data_id": "1820734063835001332",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 545,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "ssuite office software",
        "username": "ssuitesoftware",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T08:13:18",
        "author_id": "9170162",
        "data_id": "1820734882550628656",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 12434,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "securityblog",
        "username": "securityblog",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T09:39:03",
        "author_id": "80857634",
        "data_id": "1820756463104426203",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 3558,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "protectstar \u272a",
        "username": "protectstar",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T12:10:24",
        "author_id": "373437655",
        "data_id": "1820794549780033603",
        "reposts": 1,
        "post": "rt @xvonfers: (cve-2024-36971)[343727534][net]fix __dst_negative_advice() race\n__dst_negative_advice() does not enforce proper rcu rules wh\u2026",
        "audience": 332,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "mgm",
        "username": "keraktelor58",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T11:21:03",
        "author_id": "2438331601",
        "data_id": "1820782131838083410",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 536,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "dervishe the grey",
        "username": "dervyshe",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": "https://pbs.twimg.com/profile_images/1582845282831720466/NK6MIE5a_normal.jpg",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T12:06:18",
        "author_id": "301294951",
        "data_id": "1820793518388023778",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 186,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "infofox",
        "username": "fox194",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": "https://pbs.twimg.com/profile_images/1201010568393441281/vQ_5biOM_normal.jpg",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T13:01:28",
        "author_id": "1819171461132963841",
        "data_id": "1820807404570730985",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 27,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "dark horse security",
        "username": "d4rkh4rs3771",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T16:54:32",
        "author_id": "1784617532575420416",
        "data_id": "1820866055582961938",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 57,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "mejalsec",
        "username": "mejalsec",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T18:32:57",
        "author_id": "405658492",
        "data_id": "1820890821610406022",
        "reposts": 1,
        "post": "rt @openspringes: google abord\u00f3 una #vulnerabilidad de alta gravedad explotada activamente, identificada como cve-2024-36971, que afectaba\u2026",
        "audience": 36966,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "pierluigi paganini - security affairs",
        "username": "securityaffairs",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T22:21:02",
        "author_id": "846790714172325888",
        "data_id": "1820948223889993960",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 563,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "wilson texh",
        "username": "texh_wilson",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T22:28:42",
        "author_id": "1072552283014094848",
        "data_id": "1820950150312841418",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 6036,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "\u05e1\u05d9\u05d9\u05d1\u05e8\u05e1\u05d9\u05d9\u05d1\u05e8 - cybercyber podcast",
        "username": "ohcybermycyber",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T22:20:49",
        "author_id": "1659078953628491776",
        "data_id": "1820948168663822849",
        "reposts": 1,
        "post": "rt @__kokumoto: android\u306e\u30ab\u30fc\u30cd\u30eb\u306b\u304a\u3051\u308b\u9060\u9694\u30b3\u30fc\u30c9\u5b9f\u884c\u306e\u30bc\u30ed\u30c7\u30a4\u8106\u5f31\u6027\u3092google\u304c\u4fee\u6b63\u3002\u6708\u4f8b\u4fee\u6b63\u3067\u306e\u3082\u306e\u3002cve-2024-36971\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30eb\u30fc\u30c8\u7ba1\u7406\u306b\u304a\u3051\u308b\u89e3\u653e\u5f8c\u30e1\u30e2\u30ea\u4f7f\u7528\u306e\u8106\u5f31\u6027\u3002google\u306ethreat analysis group\u2026",
        "audience": 3,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "e-tomatot",
        "username": "etomatot24044",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-07T06:25:56",
        "author_id": "135614493",
        "data_id": "1821070250449760637",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 1018,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "h\ud835\udcear\ud835\udcf8\ud835\udcf8n \ud83c\uddfa\ud83c\uddf2",
        "username": "ghostdehunter",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-07T07:51:49",
        "author_id": "91158266",
        "data_id": "1821091866403623322",
        "reposts": 1,
        "post": "rt @youranonriots: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploited\u2026",
        "audience": 58274,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "anonymous \u2a5c",
        "username": "youranona",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-07T11:59:49",
        "author_id": "837878053724426240",
        "data_id": "1821154274732077068",
        "reposts": 1,
        "post": "rt @youranonriots: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploited\u2026",
        "audience": 95,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "seven",
        "username": "speeder62",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-08T00:40:06",
        "author_id": "1590244800233877505",
        "data_id": "1821345607111569458",
        "reposts": 0,
        "post": "\u3010\u8106\u5f31\u6027\u306e\u60aa\u7528\u3011               \n2024\u5e748\u67087\u65e5\u3001@cisacyber \u304c\u300c\u60aa\u7528\u304c\u78ba\u8a8d\u3055\u308c\u3066\u3044\u308b\u8106\u5f31\u6027\uff08kev\uff09\u300d\u30ea\u30b9\u30c8\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\u3002\n\ncve-2024-36971 android kernel\ncve-2024-32113 apache ofbiz https://t.co/n38dlo5x9c",
        "audience": 283,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "sompo cyber security",
        "username": "sompocyber",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-08T04:25:09",
        "author_id": "1802138618708045824",
        "data_id": "1821402242576273885",
        "reposts": 1,
        "post": "rt @piyokango: \u7c73\u56fdcisa\u304c\u60aa\u7528\u3092\u78ba\u8a8d\u3057\u305f\u8106\u5f31\u6027\u3092\u30ab\u30bf\u30ed\u30b0\u306b\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n\u2460 cve-2024-36971\nandroid kernel remote code execution vulnerability\n----------------------\na\u2026",
        "audience": 27,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "kakuta",
        "username": "k4kut4",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-08T05:24:39",
        "author_id": "779394538469109764",
        "data_id": "1821417217029972397",
        "reposts": 1,
        "post": "rt @theonecid: samsung's august patch fixes the dangerous zero-day threat for android devices\n\ncve-2024-36971\n\nupdate to august patch as so\u2026",
        "audience": 153,
        "audience_total": 178683,
        "total_reposts": 21,
        "post_count": 2,
        "author": "poker",
        "username": "fairuytail",
        "v_score": 0.670767,
        "e_score": 0.00172,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-08-07 15:35:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    }
]
[
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T04:13:18",
        "author_id": "702690547127857152",
        "data_id": "1820674483650220050",
        "reposts": 1,
        "post": "rt @landiantech: \u8c37\u6b4c\u53d1\u5e03 2024-08 #android \u4f8b\u884c\u5b89\u5168\u66f4\u65b0\uff0c\u5408\u8ba1\u4fee\u590d 48 \u4e2a\u5b89\u5168\u6f0f\u6d1e\uff0c\u5305\u62ec\u5df2\u7ecf\u906d\u5230\u9ed1\u5ba2\u5229\u7528\u7684\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e cve-2024-36971\n\n\u8be5\u6f0f\u6d1e\u4f4d\u4e8e linux kernel \u7f51\u7edc\u8def\u7531\u7ba1\u7406\u4e2d\uff0c\u501f\u52a9\u6f0f\u6d1e\u9ed1\u5ba2\u53ef\u4ee5\u65e0\u9700\u7528\u6237\u4ea4\u4e92\u53d1\u8d77\u2026",
        "audience": 124,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "\u5171\u532a\u662f\ud83d\udca9\ud83e\udd2e",
        "username": "faust2017li",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T06:38:26",
        "author_id": "806510975516082178",
        "data_id": "1820711010644177136",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 757,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "global newsroom",
        "username": "observerlife07",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T07:24:06",
        "author_id": "21512070",
        "data_id": "1820722500646355188",
        "reposts": 0,
        "post": "according to previous advisories from the linux community, cve-2024-36971 is a kernel vulnerability that can lead to a use-after-free condition.\u00a0\n#zeroday #android https://t.co/vuqzopj1d6",
        "audience": 1679,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "vojislav rodic",
        "username": "vojislav_rodic",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T06:38:41",
        "author_id": "1730713264399507456",
        "data_id": "1820711072648638668",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 124,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "recipe",
        "username": "recipe789131",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T07:28:00",
        "author_id": "1516039202869321732",
        "data_id": "1820723483455697277",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 54906,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "anonymous germany",
        "username": "anonymous00708",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T08:10:03",
        "author_id": "1364688209188450304",
        "data_id": "1820734063835001332",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 545,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "ssuite office software",
        "username": "ssuitesoftware",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T08:13:18",
        "author_id": "9170162",
        "data_id": "1820734882550628656",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 12434,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "securityblog",
        "username": "securityblog",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T09:39:03",
        "author_id": "80857634",
        "data_id": "1820756463104426203",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 3558,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "protectstar \u272a",
        "username": "protectstar",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T12:10:24",
        "author_id": "373437655",
        "data_id": "1820794549780033603",
        "reposts": 1,
        "post": "rt @xvonfers: (cve-2024-36971)[343727534][net]fix __dst_negative_advice() race\n__dst_negative_advice() does not enforce proper rcu rules wh\u2026",
        "audience": 332,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "mgm",
        "username": "keraktelor58",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T11:21:03",
        "author_id": "2438331601",
        "data_id": "1820782131838083410",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 536,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "dervishe the grey",
        "username": "dervyshe",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": "https://pbs.twimg.com/profile_images/1582845282831720466/NK6MIE5a_normal.jpg",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T12:06:18",
        "author_id": "301294951",
        "data_id": "1820793518388023778",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 186,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "infofox",
        "username": "fox194",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": "https://pbs.twimg.com/profile_images/1201010568393441281/vQ_5biOM_normal.jpg",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T13:01:28",
        "author_id": "1819171461132963841",
        "data_id": "1820807404570730985",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 27,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "dark horse security",
        "username": "d4rkh4rs3771",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36971",
        "created_datetime": "2024-08-06T16:54:32",
        "author_id": "1784617532575420416",
        "data_id": "1820866055582961938",
        "reposts": 1,
        "post": "rt @thehackersnews: google has patched a new #android kernel vulnerability, cve-2024-36971, that allows rce.\n\nit has been actively exploite\u2026",
        "audience": 57,
        "audience_total": 75265,
        "total_reposts": 12,
        "post_count": 1,
        "author": "mejalsec",
        "username": "mejalsec",
        "v_score": 0.580194,
        "e_score": 0.00042,
        "base_score": "7.8",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nNET: FIX __DST_NEGATIVE_ADVICE() RACE\n\n__DST_NEGATIVE_ADVICE() DOES NOT ENFORCE PROPER RCU RULES WHEN\nSK->DST_CACHE MUST BE CLEARED, LEADING TO POSSIBLE UAF.\n\nRCU RULES ARE THAT WE MUST FIRST CLEAR SK->SK_DST_CACHE,\nTHEN CALL DST_RELEASE(OLD_DST).\n\nNOTE THAT SK_DST_RESET(SK) IS IMPLEMENTING THIS PROTOCOL CORRECTLY,\nWHILE __DST_NEGATIVE_ADVICE() USES THE WRONG ORDER.\n\nGIVEN THAT IP6_NEGATIVE_ADVICE() HAS SPECIAL LOGIC\nAGAINST RTF_CACHE, THIS MEANS EACH OF THE THREE ->NEGATIVE_ADVICE()\nEXISTING METHODS MUST PERFORM THE SK_DST_RESET() THEMSELVES.\n\nNOTE THE CHECK AGAINST NULL DST IS CENTRALIZED IN\n__DST_NEGATIVE_ADVICE(), THERE IS NO NEED TO DUPLICATE\nIT IN VARIOUS CALLBACKS.\n\nMANY THANKS TO CLEMENT LECIGNE FOR TRACKING THIS ISSUE.\n\nTHIS OLD BUG BECAME VISIBLE AFTER THE BLAMED COMMIT, USING UDP SOCKETS.",
        "last_modified_datetime": "2024-07-15 07:15:00",
        "published_datetime": "2024-06-10 09:15:00",
        "vendor_logo": [
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    }
]
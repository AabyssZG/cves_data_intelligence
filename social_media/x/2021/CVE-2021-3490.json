[
    {
        "cve": "CVE-2021-3490",
        "created_datetime": "2024-04-28T22:08:46",
        "author_id": "1342055838849114112",
        "data_id": "1784706347273003118",
        "reposts": 0,
        "post": "@chompie1337 @chompie1337 how long did it take to come up with linux_lpe_ebpf_cve-2021-3490 ?? \n\nthat's freaking incredible!",
        "audience": 2904,
        "audience_total": 2904,
        "total_reposts": 0,
        "post_count": 1,
        "author": "average john #evr = smart contracts on #xrpl",
        "username": "averagejohnxrp",
        "v_score": 0.411599,
        "e_score": 0.07631,
        "base_score": "7.8",
        "description": "THE EBPF ALU32 BOUNDS TRACKING FOR BITWISE OPS (AND, OR AND XOR) IN THE LINUX KERNEL DID NOT PROPERLY UPDATE 32-BIT BOUNDS, WHICH COULD BE TURNED INTO OUT OF BOUNDS READS AND WRITES IN THE LINUX KERNEL AND THEREFORE, ARBITRARY CODE EXECUTION. THIS ISSUE WAS FIXED VIA COMMIT 049C4E13714E (BPF: FIX ALU32 CONST SUBREG BOUND TRACKING ON BITWISE OPERATIONS) (V5.13-RC4) AND BACKPORTED TO THE STABLE KERNELS IN V5.12.4, V5.11.21, AND V5.10.37. THE AND/OR ISSUES WERE INTRODUCED BY COMMIT 3F50F132D840 (BPF: VERIFIER, DO EXPLICIT ALU32 BOUNDS TRACKING) (5.7-RC1) AND THE XOR VARIANT WAS INTRODUCED BY 2921C90D4718 (BPF:FIX A VERIFIER FAILURE WITH XOR) ( 5.10-RC1).",
        "last_modified_datetime": "2021-09-14 14:31:00",
        "published_datetime": "2021-06-04 02:15:00",
        "vendor_logo": [
            [
                "canonical",
                null
            ],
            [
                "linux",
                "https://kazepublic.blob.core.windows.net/vendor-logos/data/Linux/linux.png"
            ]
        ],
        "profile_url": null,
        "feed_name": "twitter"
    }
]